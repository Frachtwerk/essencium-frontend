name: CI
on:
  push:
    branches:
      - main
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm --stream -r lint

  # +++ COMMENTED OUT BECAUSE THIS IS A SEPARATE ISSUE: https://github.com/Frachtwerk/essencium-frontend/issues/221 +++
  # unit-tests:
  #   name: Unit Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v4

  #     - name: Setup Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #         cache: 'pnpm'

  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile

  #     - name: Run unit tests
  #       run: pnpm --stream -r test:unit

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get installed Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./packages/app/package.json').dependencies['@playwright/test'])")" >> $GITHUB_ENV

      - name: Install Playwright browsers
        run: pnpm --filter @frachtwerk/essencium-app exec playwright install --with-deps

      - name: Cache Playwright
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Run E2E tests
        run: pnpm test:e2e
        env:
          TEST_ADMIN_USERNAME: ${{ secrets.TEST_ADMIN_USERNAME }}
          TEST_ADMIN_PASSWORD: ${{ secrets.TEST_ADMIN_PASSWORD }}

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            packages/app/test-results
            packages/app/playwright-report

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm --stream -r build

      - name: Upload 'lib' dist folder
        uses: actions/upload-artifact@v4
        with:
          name: lib-dist
          path: packages/lib/dist

      - name: Upload 'types' dist folder
        uses: actions/upload-artifact@v4
        with:
          name: types-dist
          path: packages/types/dist

      - name: Cache dist folder for 'app' package
        id: cache-dist
        uses: actions/cache@v4
        env:
          cache-name: cache-dist
        with:
          path: packages/app/dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}

  release:
    name: Release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs: [lint, build] # [lint, unit-tests, e2e-tests, build]
    steps:
      - name: Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download 'lib' dist folder
        uses: actions/download-artifact@v4
        with:
          name: lib-dist
          path: packages/lib/dist

      - name: Download 'types' dist folder
        uses: actions/download-artifact@v4
        with:
          name: types-dist
          path: packages/types/dist

      - name: Publish 'lib' package
        run: pnpm publish --filter "@frachtwerk/essencium-lib" --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish 'types' package
        run: pnpm publish --filter "@frachtwerk/essencium-types" --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish 'prettier-config-essencium' package
        run: pnpm publish --filter "@frachtwerk/prettier-config-essencium" --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish 'eslint-config-essencium' package
        run: pnpm publish --filter "@frachtwerk/eslint-config-essencium" --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
